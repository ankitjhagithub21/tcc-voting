import React, { useState } from "react";

const playersList = [
    "рд╕реБрднрдВрдХрд░ рдХреБрдорд╛рд░ рджрд╛рд╕", "рдкреНрд░рджреАрдк рдХреБрдорд╛рд░ рджрд╛рд╕", "рд╕рдВрдЬрдп рдХреБрдорд╛рд░ рдЭрд╛", "рд░рд╛рдЬреЗрд╢ рдХреБрдорд╛рд░ рдорд┐рд╢реНрд░", "рд░рд╛рдХреЗрд╢ рднреВo рдкреНрд░рд╕рд╛рдж",
    "рд░рд╡рд┐рд╢рдВрдХрд░ рдШреЛрд╖", "рдЕрдиреБрдЬ рднреВo рдкреНрд░рд╕рд╛рдж", "рдЙрддреНрддрдо рдХреБрдорд╛рд░ рдЭрд╛", "рд╕рдВрджреАрдк рдХреБрдорд╛рд░ рджрд╛рд╕", "рдиреЗрд╣рд░реВ рдХреБрдорд╛рд░ рдШреЛрд╖",
    "рдзрдирдВрдЬрдп рдХреБрдорд╛рд░ рдШреЛрд╖", "рдкрдВрдХрдЬ рдХреБрдорд╛рд░ рдорд┐рд╢реНрд░", "рдореБрдХреЗрд╢ рдХреБрдорд╛рд░ рдЭрд╛", "рдореГрддреНрдпреБрдЮреНрдЬрдп рдХреБрдорд╛рд░ рдЭрд╛", "рд╡рд┐рдХрд╛рд╢ рдХреБрдорд╛рд░ рдЭрд╛",
    "рд░рд┐рддреЗрд╢ рдХреБрдорд╛рд░ рдЭрд╛", "рд╕рдВрддреЛрд╖ рдХреБрдорд╛рд░ рдШреЛрд╖", "рдкрд╡рди рдХреБрдорд╛рд░ рдЭрд╛", "рдореБрдХреЗрд╢ рдХреБрдорд╛рд░ рдЭрд╛ (2)", "рд╡рд┐рдкреБрд▓ рдХреБрдорд╛рд░ рдШреЛрд╖",
    "рдирд┐рддреЗрд╢ рдХреБрдорд╛рд░ рджрд╛рд╕", "рдХрдорд▓реЗрд╢ рдХреБрдорд╛рд░ рдЭрд╛", "рдЖрд╢реБрддреЛрд╖ рдХреБрдорд╛рд░ рдорд┐рд╢реНрд░", "рдмрд┐рдЯреНрдЯреВ рдХреБрдорд╛рд░ рдЭрд╛", "рдЕрдЬрд┐рдд рдХреБрдорд╛рд░ рдЭрд╛",
    "рд╕рд┐рдкреБрд▓ рдХреБрдорд╛рд░ рдШреЛрд╖", "рдЕрдиреБрдЬ рдХреБрдорд╛рд░ рджрд╛рд╕", "рд╕реМрд░рд╡ рдХреБрдорд╛рд░ рджрд╛рд╕", "рдХреБрд╢рдХрд╛рдВрдд рдЭрд╛", "рд▓рд╡рдХрд╛рдВрдд рдЭрд╛",
    "рд░рд╛рдЬрд╛ рдХреБрдорд╛рд░ рдЭрд╛", "рдордиреАрд╖ рдХреБрдорд╛рд░ рдорд┐рд╢реНрд░", "рд╕реБрдпрд╢ рдХреБрдорд╛рд░ рдЭрд╛", "рдЕрдВрдХрд┐рдд рдХреБрдорд╛рд░ рдЭрд╛", "рд╕реМрд░рд╡ рдХреБрдорд╛рд░ рдЪреМрдзрд░реА",
    "рд░рд╛рд╣реБрд▓ рдХреБрдорд╛рд░ рдорд┐рд╢реНрд░", "рдЕрдВрд╢реБ рдХреБрдорд╛рд░ рдШреЛрд╖", "рдЕрдВрдХрд┐рдд рдХреБрдорд╛рд░ рдЭрд╛ (2)", "рд╕реВрд░рдЬ рдХреБрдорд╛рд░ рдЭрд╛", "рдкреНрд░рдгрдм рдХреБрдорд╛рд░ рдЭрд╛"
];

const Players = () => {
    const [search, setSearch] = useState("");
    const [selectedPlayers, setSelectedPlayers] = useState([]);

    const toggleSelect = (player) => {
        if (selectedPlayers.includes(player)) {
            setSelectedPlayers(selectedPlayers.filter((p) => p !== player));
        } else {
            setSelectedPlayers([...selectedPlayers, player]);
        }
    };

    const filteredPlayers = playersList.filter((player) =>
        player.toLowerCase().includes(search.toLowerCase())
    );

    return (
        <div className="w-full">
            <div className="container mx-auto bg-white rounded-xl shadow-lg p-6">
                <h1 className="text-3xl font-bold text-center text-indigo-600 mb-5">
                    ЁЯПЖ 27рд╡рд╛рдБ рдЯреА.рд╕реА.рд╕реА рдХрдк рдХрд╕рдмрд╛ 2025 ЁЯПЖ
                </h1>

                <div className="mb-4">
                    <input
                        type="text"
                        placeholder="ЁЯФН рдЦрд┐рд▓рд╛рдбрд╝рд┐рдпреЛрдВ рдХреЛ рдЦреЛрдЬреЗрдВ..."
                        value={search}
                        onChange={(e) => setSearch(e.target.value)}
                        className="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400"
                    />
                </div>

                <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {filteredPlayers.map((player, index) => (
                        <div
                            key={index}
                            className={`p-4 border rounded-lg cursor-pointer transition ${
                                selectedPlayers.includes(player)
                                    ? "bg-indigo-500 text-white"
                                    : "bg-white hover:bg-indigo-100"
                            }`}
                            onClick={() => toggleSelect(player)}
                        >
                            <span className="font-medium">{index + 1}. {player}</span>
                        </div>
                    ))}
                </div>

                <div className="mt-6">
                    <h2 className="text-xl font-semibold text-center text-green-600">тЬЕ рдЪрдпрдирд┐рдд рдЦрд┐рд▓рд╛рдбрд╝реА:</h2>
                    {selectedPlayers.length > 0 ? (
                        <ul className="list-disc list-inside mt-2">
                            {selectedPlayers.map((player, index) => (
                                <li key={index}>{player}</li>
                            ))}
                        </ul>
                    ) : (
                        <p className="text-center text-gray-500 mt-2">рдХреЛрдИ рдЦрд┐рд▓рд╛рдбрд╝реА рдЪрдпрдирд┐рдд рдирд╣реАрдВ рд╣реИред</p>
                    )}
                </div>
            </div>
        </div>
    );
};

export default Players;
